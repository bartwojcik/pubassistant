# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-26 15:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255, unique=True)),
                ('internal_identifier', models.CharField(blank=True, db_index=True, max_length=255)),
                ('title', models.TextField()),
                ('location', models.CharField(max_length=2000)),
                ('abstract', models.TextField(blank=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DigitalLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('total_articles', models.IntegerField()),
                ('enabled', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Digital libraries',
            },
        ),
        migrations.CreateModel(
            name='DownloadBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField()),
                ('size', models.IntegerField()),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='main_assistant.DigitalLibrary')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=32, unique=True)),
                ('internal_identifier', models.CharField(blank=True, db_index=True, max_length=255)),
                ('name', models.TextField(blank=True)),
                ('location', models.CharField(max_length=2000)),
                ('is_journal', models.BooleanField()),
                ('aim_and_scope', models.TextField(blank=True)),
                ('digital_library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='main_assistant.DigitalLibrary')),
            ],
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('2', 'eigenfactor'), ('0', 'impact_factor'), ('1', 'mnisw_points')], max_length=1)),
                ('value', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('date', models.DateField()),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='main_assistant.Publication')),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referred', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_references', to='main_assistant.Article')),
                ('referring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_references', to='main_assistant.Article')),
            ],
        ),
        migrations.CreateModel(
            name='SavedReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referred_location', models.CharField(db_index=True, max_length=2000)),
                ('referred_location_is_internal_identifier', models.BooleanField(default=False)),
                ('referring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_saved_references', to='main_assistant.Article')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='authors',
            field=models.ManyToManyField(to='main_assistant.Author'),
        ),
        migrations.AddField(
            model_name='article',
            name='keywords',
            field=models.ManyToManyField(to='main_assistant.Keyword'),
        ),
        migrations.AddField(
            model_name='article',
            name='publication',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='main_assistant.Publication'),
        ),
        migrations.AddField(
            model_name='article',
            name='references',
            field=models.ManyToManyField(related_name='is_referred', through='main_assistant.Reference', to='main_assistant.Article'),
        ),
        migrations.AlterUniqueTogether(
            name='savedreference',
            unique_together=set([('referring', 'referred_location')]),
        ),
        migrations.AlterUniqueTogether(
            name='reference',
            unique_together=set([('referring', 'referred')]),
        ),
    ]
